"""
Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class OwnErrorNotNumeric(Exception):
    def __init__(self, txt):
        self.txt = txt


numbers = []
s = ""
while s != 'stop':
    s = input("Введите список чисел поэлементно, окончание ввода слово stop: ")
    for x in s.split():  # это на случай если вдруг пользователь захочет вводить числа партиями через пробел
        if x == 'stop':
            s = 'stop'
            break
        try:
            x_test = x  # временная переменная для тестирования вводимого числа
            if x_test[0] == "-":  # вдруг отрицательное
                x_test = x_test[1:]
            pos = x_test.find(".")   # вдруг дробное
            if pos != -1 and pos != len(x_test)-1:
                x_test = x_test[:pos] + x_test[pos+1:]
            if not x_test.isnumeric():
                raise OwnErrorNotNumeric(f"{x} - не число!")
        except OwnErrorNotNumeric as err:
            print(err)
        else:
            numbers.append(x)

print("Введенный список: ", numbers)
