"""
Создать вручную и заполнить несколькими строками текстовый файл,
в котором каждая строка должна содержать данные о фирме: название, форма собственности, выручка, издержки.
Пример строки файла: firm_1   ООО   10000   5000.
Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
Подсказка: использовать менеджер контекста.
"""

import json

# Пытаемся прочитать файл
try:
    with open("task5_7.txt", "r", encoding='utf-8') as f:
        content = f.readlines()
except IOError:
    print("Произошла ошибка ввода-вывода!")
    quit()

print("Содержимое анализируемого файла:")
for n, line in enumerate(content):
    s = line.rstrip('\n')
    print(f"Строка {n + 1}: {s}")

if not len(content):
    print(f"Ошибка: нет данных")
    quit()

# Записываем содержимое в список
# Вместе с этим проверяем структуру файла:
# в каждой строке минимум 4 значения, третье и четвертое значения - числа
data = []
for n, line in enumerate(content):
    line_list = line.split()
    try:
        data.append([line_list[0], line_list[1], float(line_list[2]), float(line_list[3])])
    except IndexError:
        print(f"Ошибка в структуре данных: В строке {n + 1} должно быть минимум четыре значения!")
        quit()
    except ValueError:
        print(f"Ошибка в структуре данных: В строке {n + 1} третье и четвертое значения должны быть числами!")
        quit()

# вычисляем прибыль каждой компании, а также среднюю прибыль.
# Если фирма получила убытки, в расчет средней прибыли ее не включаем
# результат - словарь с фирмами и их прибылями
# Если фирма получила убытки, также добавим ее в словарь (со значением убытков)
# чтобы отличить прибыль от убытков - убыток будем записывать со знаком минус
# (можно записывать фирмы с убытками в отдельный словарь, но тогда форма исходящего списка не будет соответствовать
# приведенному в задании примеру)
profit_total = 0
dict_1 = {}
for d in data:
    profit = d[2] - d[3]
    if profit > 0:
        profit_total += profit
    dict_1[d[0]] = profit

# cловарь со средней прибылью
average_profit = profit_total / len(data)
dict_2 = {"average_profit": average_profit}

# Итоговый список сохранить в виде json-объекта в соответствующий файл.

list_out = [dict_1, dict_2]
with open("task5_7.json", "w") as write_f:
    json.dump(list_out, write_f)

print(list_out)
print("json-объект сохранен в файл")
